// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Constructor {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  year         Int      @unique
  constructors Json[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Driver {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  year      Int      @unique
  drivers   Json[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Circuit {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  year      Int      @unique
  circuits  Json[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Driverstandings {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  year      Int      @unique
  standings Json[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Constructorstandings {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  year      Int      @unique
  standings Json[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Schedule {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  year         Int      @unique
  raceschedule Json[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Qualifyingresult {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  year      Int
  round     Int
  result    Json[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RaceResult {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  year      Int
  round     Int
  result    Json[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
